@use 'sass:map';
@use '../../../css/main' as *;

$iconRatio: 0.4;

.container {

  .legend-container {
    bottom: 0;
    position: sticky;
    z-index: var(--stack-legend);

    .legend-scroll {
      background: var(--jhu-brand-heritage-blue);
      display: flex;
      flex: 1;  
      min-width: 100%;
      overflow-x: auto;
      overflow-y: hidden;
      padding: #{map.get($shared-vars, 'legendPadding_small')}px;
    }

    .label {
      background: var(--jhu-brand-gold);
      color: var(--jhu-brand-heritage-blue);
      left: 15px;
      top: -0.6rem;
      font-size: 0.8rem;
      font-weight: 700;
      padding: 0.3rem 0.6rem;
      line-height: 1em;
      position: absolute;
      text-transform: uppercase;
      transform: rotate(-2deg);
      z-index: 1;
    }
  }

  .legend {
    display: flex;
    gap: #{map.get($shared-vars, 'legendGap_small')}px;
    
    .thumbnail {
      background: #000;
      height: #{map.get($shared-vars, 'legendThumbnailHeight_small')}px;
      width: #{map.get($shared-vars, 'legendThumbnailHeight_small')}px;

      img {
        width: 100%;
      }

      svg {
        background: #fff;
        fill: green;
        height: calc((map.get($shared-vars, 'legendThumbnailHeight_small')px) * $iconRatio);
        width: calc((map.get($shared-vars, 'legendThumbnailHeight_small')px) * $iconRatio);
        position: absolute;
      }
    }
  }

  &.medium {
    .legend {
      gap: #{map.get($shared-vars, 'legendGap_medium')}px;

      .thumbnail {
        height: #{map.get($shared-vars, 'legendThumbnailHeight_medium')}px;
        width: #{map.get($shared-vars, 'legendThumbnailHeight_medium')}px;
        svg {
          height: calc((map.get($shared-vars, 'legendThumbnailHeight_medium')px) * $iconRatio);
          width: calc((map.get($shared-vars, 'legendThumbnailHeight_medium')px) * $iconRatio);
        }
      }
    }
  }

  &.large {
    .legend {
      gap: #{map.get($shared-vars, 'legendGap_large')}px;

      .thumbnail {
        height: #{map.get($shared-vars, 'legendThumbnailHeight_large')}px;
        width: #{map.get($shared-vars, 'legendThumbnailHeight_large')}px;
        svg {
          height: calc((map.get($shared-vars, 'legendThumbnailHeight_large')px) * $iconRatio);
          width: calc((map.get($shared-vars, 'legendThumbnailHeight_large')px) * $iconRatio);
        }
      }
    }
  }

  &.xlarge {
    .legend {
      gap: #{map.get($shared-vars, 'legendGap_xlarge')}px;

      .thumbnail {
        height: #{map.get($shared-vars, 'legendThumbnailHeight_xlarge')}px;
        width: #{map.get($shared-vars, 'legendThumbnailHeight_xlarge')}px;
        svg {
          height: calc((map.get($shared-vars, 'legendThumbnailHeight_xlarge')px) * $iconRatio);
          width: calc((map.get($shared-vars, 'legendThumbnailHeight_xlarge')px) * $iconRatio);
        }
      }
    }
  }
}
